Fiind data matricea costurilor intr un graf neorientat, sa se reprezinte grafic graful a.i. distantele dintre noduri sa fie proportional egale cu valoarea din matricea costurilor.

Windows form app -> pictureBox si button. dublu click pe buton si pe formular
Project -> Add class -> "Engine.cs"
Project -> Add class -> "Solution.cs"



Engine.cs:


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;
using System.Windows.Forms;

namespace GrafCosturiDesen
{
    public static class Engine
    {
        public static int n = 4;
        public static int[,] ma = new int[n, n];
        public static float k = 4;
        public static int resx, resy;
        public static Random r = new Random();
        public static int N = 1000;
        public static List<Solution> sol = new List<Solution>();
        public static int K = 5;
        public static List<Solution> par = new List<Solution>();

        public static void Do()
        {
            par.Clear();
            sol.Sort(delegate (Solution a, Solution b) {return a.FAdec().CompareTo(b.FAdec()); });
            for(int i=0; i<K; i++)
                par.Add(sol[i]);
            sol.Clear();

            sol.AddRange(par);
            for(int i=K; i<N; i++)
                sol.Add(Mutate(Cross(par[r.Next(K)], par[r.Next(K)])));
        }

        public static Solution Cross(Solution a, Solution b)
        {
            Solution mix = new Solution();
            for (int i = 0; i < n / 2; i++)
            {
                mix.values[i].X = a.values[i].X;
                mix.values[i].Y = a.values[i].Y;
            }
            for (int i = n/2; i < n; i++)
            {
                mix.values[i].X = b.values[i].X;
                mix.values[i].Y = b.values[i].Y;
            }
            return mix;
        }

        public static Solution Mutate(Solution T)
        {
            Solution mix = new Solution();
            for (int i = 0; i < n; i++)
            {
                mix.values[i].X = T.values[i].X;
                mix.values[i].Y = T.values[i].Y;
            }
            int m = r.Next(n);
            mix.values[m].X = r.Next(resx);
            mix.values[m].Y = r.Next(resy);
            return mix;
        }

        public static void Init(int x, int y)
        {
            ma[0, 0] = 0; ma[0, 1] = 20; ma[0, 2] = -1; ma[0, 3] = 10;
            ma[1, 0] = 0; ma[1, 1] = 0; ma[1, 2] = -1; ma[1, 3] = 15;
            ma[2, 0] = 0; ma[2, 1] = 0; ma[2, 2] = 0; ma[2, 3] = 5;
            ma[3, 0] = 0; ma[3, 1] = 0; ma[3, 2] = 0; ma[3, 3] = 0;

            resx = x;
            resy = y;

            for (int i = 0; i < N; i++)
                sol.Add(new Solution());
            Do();
        }

        public static float D(PointF a, PointF b)
        {
            return (float)Math.Sqrt((a.X - b.X) * (a.X - b.X) + (a.Y - b.Y) * (a.Y - b.Y));
        }
    }
}



Solution.cs:


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Drawing;

namespace GrafCosturiDesen
{
    public class Solution
    {
        public PointF[] values;

        public float FAdec()
        {
            float s = 0;
            for (int i=0; i<Engine.n; i++)
                for(int j=0; j<Engine.n; j++)
                {
                    if (Engine.ma[i, j] > 0)
                        s += (float)Math.Abs(Engine.k * Engine.D(values[i], values[j]) - Engine.ma[i, j]);
                }
            return s;
        }

        public string View()
        {
            string s = "";
            for (int i = 0; i < Engine.n; i++)
                s += values[i].ToString();
            s += FAdec().ToString();
            return s;
        }

        public Solution()
        {
            values = new PointF[Engine.n];
            for (int i = 0; i < Engine.n; i++)
                values[i] = new PointF(Engine.r.Next(Engine.resx), Engine.r.Next(Engine.resy));
        }
    }
}



Form1.cs:


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace GrafCosturiDesen
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Engine.Init(pictureBox1.Width, pictureBox1.Height);
            for (int i = 0; i < Engine.K; i++)
                listBox1.Items.Add(Engine.par[i].View());
        }

        private void button1_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            for (int i = 0; i < 100; i++)
                Engine.Do();
            for (int i = 0; i < Engine.K; i++)
                listBox1.Items.Add(Engine.par[i].View());
        }
    }
}