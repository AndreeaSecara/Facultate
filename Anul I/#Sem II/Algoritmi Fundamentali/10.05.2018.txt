Se da o matrice de valori 1 si 0 reprezentand un labirint in care 1 repr. ziduri si 0 reprezinta drum. de la pozitia 0-0 si, presupunand ca exista drum pana la pozitia n-1 - m-1, afisati acest drum.

Ex: 
0 1 1 1
0 0 0 1
1 1 0 1
0 0 0 1
1 0 1 1
0 0 0 0

Afisare: 0,0; 1,0; 1,1; 1,2; 2,2; 3,2; 3,1; 4,1; 5,1; 5,2; 5,3
(Avem nevoie de queue, sau "coada")

Probleme de laborator:
1. Se construieste o lista simplu inlantuita
2. Se construieste o lista simplu inlantuita direct ordonata
(se poate sa ne dea si la examen ceva asemanator, si da...in limbaj C++ :( )


Creati un program C++:

#include "stdafx.h"
#include <iostream>
using namespace std;

struct nod
{
	int informatie;
	nod* link;
};

void AdaugareLaInceput(struct nod* &old)
{
	nod* New = new nod;
	cin >> New->informatie;
	New->link = old;
	old = New;
}

void AdaugareLaFinal(struct nod* &old)
{
	nod* t = old;
	for (; t->link != NULL; t = t->link);
	nod* New = new nod;
	cin >> New->informatie;
	New->link = NULL;
	t->link = New;
}

void Vizualizare(struct nod* old)
{
	nod* t;
	for (t = old; t != NULL; t = t->link)
	{
		cout << t->informatie << "  ";
	}
	cout << "\n";
}

void StergereLaInceput(struct nod* &old)
{
	nod* t = old;
	old = old->link;
	delete t;
}

int main()
{
	nod* t = NULL;
	AdaugareLaInceput(t);
	AdaugareLaInceput(t);
	AdaugareLaInceput(t);
	AdaugareLaInceput(t);
	AdaugareLaInceput(t);
	Vizualizare(t);
	StergereLaInceput(t);
	AdaugareLaFinal(t);
	AdaugareLaFinal(t);
	AdaugareLaFinal(t);
	AdaugareLaFinal(t);
	Vizualizare(t);
	system("pause");
        return 0;
}
